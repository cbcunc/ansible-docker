---

# Requires ansible>=2.3.0.

- hosts: docker_targets
  vars_files:
    - variables/docker-setup.yml
  become: yes
  tasks:
  - name: update all
    yum:
    args:
      name: '*'
      state: latest
      skip_broken: yes

  - name: install prereqs
    yum:
    args:
      name:
        - yum-utils
        - wget
        - device-mapper-persistent-data
        - lvm2

    # Bug in ansible yum-repository module
    # Doesn't install full repo file
  - name: add repository
    shell: >
      yum-config-manager \
      --add-repo \
      https://download.docker.com/linux/centos/docker-ce.repo

    # Bug in ansible yum module
    # Doesn't support makecache
  - name: refresh yum cache
    shell: >
      yum makecache fast
    args:
      executable: "{{ docker.shell }}"
      warn: no

  - name: install latest docker-ce
    yum:
    args:
      name:
        - docker-ce
    when: docker.version == "latest"

  - name: install versioned docker-ce
    yum:
    args:
      name:
        - "docker-ce-{{ docker.version }}"
    when: docker.version != "latest"

  - name: start docker
    systemd:
      state: started
      enabled: yes
      name: docker

    # Bug in ansible getent module.
    # Group may already exist externally.
  - name: does {{ docker.group }} group already exist?
    shell: "getent group {{ docker.group }}"
    ignore_errors: yes
    register: getent_docker_group
    args:
      executable: "{{ docker.shell }}"

    # No bug in group module state option for external group.
    # But creating group with same genent stdout test as user.
  - name: create group {{ docker.group }} if not present
    group:
    when: docker.group not in getent_docker_group.stdout
    args:
      name: "{{ docker.group }}"
      state: present

    # Bug in ansible getent module for external user.
    # User may already exist externally.
  - name: does user {{ docker.user }} already exist?
    shell: "getent passwd {{ docker.user }}"
    ignore_errors: yes
    register: getent_docker_user
    args:
      executable: "{{ docker.shell }}"

    # Bug in user module state option.
  - name: create user {{ docker.user }} if not present
    user:
    when: docker.user not in getent_docker_user.stdout
    args:
      name: "{{ docker.user }}"
      home: "{{ docker.home }}"
      group: "{{ docker.group }}"
      system: yes
      shell: "{{ docker.shell }}"
      state: present

  - name: adding existing user {{ docker.user }} to {{ docker.group }} group
    user:
      name: "{{ docker.user }}"
      groups: "{{ docker.group }}"
      append: yes

  - name: install docker daemon.json
    template:
    args:
      src: "templates/daemon.json.j2"
      dest: "/etc/docker/daemon.json"
      owner: root
      group: root
      mode: 0644

  - name: restart docker
    systemd:
      state: restarted
      daemon_reload: yes
      name: docker

  - block:
    - name: check for pre-existing miniconda
      stat:
      register: stat_miniconda
      args:
        path: "~/{{ miniconda.path }}"

    - name: download miniconda
      get_url:
      when: stat_miniconda.stat.isdir is not defined
      args:
        url: "{{ miniconda.url }}/{{ miniconda.installer }}"
        dest: "~/{{ miniconda.installer }}"
        mode: "{{ miniconda.mode }}"

    - name: install miniconda
      shell: >
        "{{ miniconda.shell }}" ~/"{{ miniconda.installer }}" \
        -b -p ~/"{{ miniconda.path }}"
      when: stat_miniconda.stat.isdir is not defined
      args:
        executable: "{{ miniconda.shell }}"

    - name: configure conda-forge
      shell: >
        ~/"{{ miniconda.path }}"/bin/conda \
        config --add channels conda-forge
      args:
        executable: "{{ miniconda.shell }}"

    - name: clean out incomplete package downloads
      shell: >
        ~/"{{ miniconda.path }}"/bin/conda \
        clean -y --packages --tarballs
      args:
        executable: "{{ miniconda.shell }}"

    - name: update conda
      shell: >
        ~/"{{ miniconda.path }}"/bin/conda \
        update -y conda
      args:
        executable: "{{ miniconda.shell }}"

    - name: update everything else
      shell: >
        ~/"{{ miniconda.path }}"/bin/conda \
        update -y --all
      args:
        executable: "{{ miniconda.shell }}"

    - name: check for pre-existing github3 environment
      stat:
      register: stat_github3
      args:
        path: "~/{{ miniconda.path }}/envs/{{ github3.environment }}"

    - name: create github3 environment
      shell: >
        ~/"{{ miniconda.path }}"/bin/conda \
        create -y -n "{{ github3.environment }}" github3.py
      when: stat_github3.stat.isdir is not defined
      args:
        executable: "{{ miniconda.shell }}"

    - name: install query_latest_compose.py
      template:
      args:
        src: "templates/query_latest_compose.py.j2"
        dest: "~/query_latest_compose.py"
        owner: "{{ miniconda.user }}"
        mode: 0744

      # Bug in github_release module.
      # Doesn't allow anonymous public repo access.
    - name: query latest compose
      shell: >
        ~/"{{ miniconda.path }}"/envs/"{{ github3.environment }}"/bin/python \
        ~/query_latest_compose.py
      register: latest_compose
      args:
        executable: "{{ miniconda.shell }}"

    - name: latest compose
      debug:
      args:
        var: latest_compose.stdout

    become: yes
    become_user: "{{ miniconda.user }}"

  - block:
    - name: get platform-architecture
      shell: >
        echo `uname -s`-`uname -m`
      register: platform_architecture
      args:
        executable: "{{ docker.shell }}"

    - name: platform architecture
      debug:
      args:
        var: platform_architecture.stdout

    - name: get docker-compose
      uri:
      args:
        url: "{{ compose.url }}/{{ latest_compose.stdout }}/docker-compose-{{ platform_architecture.stdout }}"
        dest: "{{ compose.dest }}"
        status_code: "200,304"

    - name: make executable
      file:
      args:
        path: "{{ compose.dest }}"
        mode: "+x"

    - name: get docker-compose bash completion
      uri:
      args:
       url: "{{ compose.completion.url1 }}/{{ latest_compose.stdout }}/{{ compose.completion.url2 }}"
       dest: "{{ compose.completion.dest }}"
       status_code: "200,304"

    become: yes
    become_user: root

...